% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimisation.R
\name{stan_optimizing_best_of}
\alias{stan_optimizing_best_of}
\title{Find Optimal Parameters for a Stan Model Using Multiple Attempts}
\usage{
stan_optimizing_best_of(
  ...,
  .max_attempts = 20,
  .best_of = 10,
  .method = rstan::optimizing
)
}
\arguments{
\item{...}{Arguments passed to the chosen method.}

\item{.max_attempts}{The maximum number of attempts. Default is 20.}

\item{.best_of}{The number of attempts to keep. Default is 10.}

\item{.method}{The optimisation function tocall. Default is
\code{\link[rstan]{optimizing}}; can also be \code{stan_trust_optim}. Any
function with return type compliant with \code{rstan::optimizing} can be used.}
}
\value{
A list containing the result of the best attempt and all attempts.
}
\description{
This function optimizes the parameters of a given Stan model using multiple
attempts by calling either \code{\link[rstan]{optimizing}} or
\code{\link{stan_nlminb}}. The function returns the best result of
\code{.best_of} attempts. It will attempt up to \code{.max_attempts} times to find a
solution, which makes it somewhat robust to errors in the optimisation
process. Logging in this function uses the \pkg{logger} package, and can be
enabled by setting the log level to trace through
\code{logger::log_threshold(logger::TRACE)}.
}
\examples{
\dontrun{
  # Define a Stan model (assuming `model_code` contains your Stan model)
  stan_model <- rstan::stan_model(model_code = model_code)
  # Define data (assuming `data_list` contains your data)
  fit <- stan_best_of_optim(rstan::optimizing, stan_model, data = data_list)
}

}
